{"mappings":"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","sources":["src/index.ts","src/VanillaGrid.ts","src/helpers/CreateElement.ts","src/helpers/CreateListElement.ts","src/helpers/EnableBtn.ts","src/helpers/DisableBtn.ts","src/VanillaServerGrid.ts"],"sourcesContent":["\r\nexport *  from './VanillaGrid';\r\nexport *  from './VanillaServerGrid';\r\n","import { Config } from \"./interfaces/Config\";\r\nimport { CreateElement } from \"./helpers/CreateElement\";\r\nimport { CreateListElement } from \"./helpers/CreateListElement\";\r\nimport { EnableBtn } from './helpers/EnableBtn';\r\nimport { DisableBtn } from './helpers/DisableBtn';\r\nexport class VanillaGrid {\r\n\r\n    table: HTMLElement;\r\n\r\n    config: Config;\r\n\r\n    tbody: HTMLElement;\r\n\r\n    trs: any[] = [];\r\n\r\n    currentPage: any = 1;\r\n\r\n    wrapper: HTMLElement;\r\n\r\n    get itemsPerPage(): any {\r\n\r\n        return this.config?.itemsPerPage || 10;\r\n    }\r\n\r\n    get totalPages(): any {\r\n\r\n        return Math.ceil(this.trs.length / this.itemsPerPage)\r\n    }\r\n\r\n    get start(): any {\r\n\r\n        return (this.currentPage - 1) * (this.itemsPerPage)\r\n    }\r\n\r\n    get end(): any {\r\n\r\n        let end = this.start + this.itemsPerPage;\r\n\r\n        if (end > this.trs.length) {\r\n\r\n            end = this.trs.length;\r\n        }\r\n        return end;\r\n    }\r\n\r\n    get activeClass() {\r\n\r\n        return this.config?.classNames?.active || 'active';\r\n    }\r\n\r\n    get infoText() {\r\n        const info = this.config.info?.trim();\r\n        if (!info) {\r\n            return '';\r\n        }\r\n        const replaced = info.replace(':start', this.start + 1)\r\n            .replace(':end', this.end)\r\n            .replace(':total', this.trs?.length.toString());\r\n        return replaced;\r\n    }\r\n\r\n    constructor(table, config) {\r\n\r\n        this.table = table;\r\n\r\n        this.config = config;\r\n\r\n        const tbody = this.table.querySelector(\"tbody\");\r\n        if (!tbody) {\r\n            console.error(\"Cannot render vanilla grid. Make sure your table is wrapped with thead and tbody\");\r\n            return;\r\n        }\r\n\r\n        this.tbody = tbody;\r\n\r\n        const trs: any = this.tbody.querySelectorAll(\"tr\");\r\n\r\n        if (!trs || !trs.length) {\r\n\r\n            console.error(\"Cannot render vanilla grid. No table rows found\");\r\n\r\n\r\n            return;\r\n        }\r\n\r\n        if (trs.length <= this.itemsPerPage) {\r\n\r\n            return;\r\n\r\n        }\r\n\r\n        this.trs = trs;\r\n\r\n\r\n\r\n        this.render();\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        this.trs.forEach(tr => tr.style.display = 'none');\r\n\r\n        for (let i = this.start; i < this.end; i++) {\r\n\r\n            this.trs[i].style.display = '';\r\n\r\n        }\r\n        if (!this.wrapper) {\r\n\r\n            this.drawWrapper();\r\n\r\n        }\r\n\r\n        this.renderBtns();\r\n\r\n    }\r\n\r\n    drawWrapper() {\r\n\r\n        let li;\r\n\r\n        const ul = CreateElement('ul', '', this.config?.classNames?.ul);\r\n\r\n        li = CreateListElement('&laquo;', 'first', this.config.classNames);\r\n        ul.append(li);\r\n        li = CreateListElement('&lsaquo;', 'prev', this.config.classNames);\r\n        ul.append(li);\r\n\r\n        if (this.totalPages > 5) {\r\n\r\n            const select = CreateElement('select', '', this.config?.classNames?.select);\r\n            for (let i = 1; i <= this.totalPages; i++) {\r\n                const option = CreateElement('option', i, '', { value: i })\r\n\r\n                select.append(option)\r\n\r\n            }\r\n            const li = CreateElement('li');\r\n            const div = CreateElement('div', '', this.config?.classNames?.selectDiv);\r\n            div.append(select);\r\n            li.append(div);\r\n            ul.append(li);\r\n\r\n        } else {\r\n\r\n            for (let i = 1; i <= this.totalPages; i++) {\r\n\r\n                li = CreateListElement(i, 'number', this.config.classNames);\r\n\r\n                ul.append(li);\r\n\r\n            }\r\n        }\r\n\r\n\r\n\r\n        li = CreateListElement('&rsaquo;', 'next', this.config.classNames);\r\n        ul.append(li);\r\n        li = CreateListElement('&raquo;', 'last', this.config.classNames);\r\n        ul.append(li);\r\n\r\n        const nav = CreateElement('nav', '', this.config?.classNames?.nav);\r\n        nav.append(ul);\r\n\r\n\r\n        const wrapper = CreateElement('div', '', this.config?.classNames?.wrapper);\r\n\r\n        if (this.infoText) {\r\n            const info = CreateElement('div', '', 'info');\r\n            wrapper.append(info);\r\n        }\r\n\r\n        wrapper.append(nav);\r\n\r\n        const wrapperBtns = wrapper.querySelectorAll('button');\r\n        const wrapperSelect = wrapper.querySelector(\"select\");\r\n\r\n        wrapperBtns.forEach((btn) => {\r\n            btn.addEventListener('click', (event) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                if (btn.classList.contains('page')) {\r\n                    if (btn.classList.contains('number')) {\r\n                        const pageNumber: any = parseInt(btn.innerText);\r\n                        this.currentPage = pageNumber;\r\n                    } else if (btn.classList.contains('first')) {\r\n                        this.currentPage = 1;\r\n                    } else if (btn.classList.contains('prev')) {\r\n                        this.currentPage = this.currentPage - 1;\r\n                    } else if (btn.classList.contains('next')) {\r\n                        this.currentPage = this.currentPage + 1;\r\n                    } else if (btn.classList.contains('last')) {\r\n                        this.currentPage = this.totalPages;\r\n                    }\r\n\r\n                    if (wrapperSelect) {\r\n                        wrapperSelect.value = this.currentPage;\r\n                    }\r\n\r\n                    this.render();\r\n                }\r\n            })\r\n        })\r\n\r\n        if (wrapperSelect) {\r\n            wrapperSelect.addEventListener('change', () => {\r\n                this.currentPage = parseInt(wrapperSelect.value);\r\n                this.render();\r\n            })\r\n        }\r\n\r\n        this.table.parentNode?.insertBefore(wrapper, this.table.nextSibling);\r\n        this.wrapper = wrapper;\r\n    }\r\n\r\n    renderBtns() {\r\n\r\n        if (this.infoText) {\r\n            const info = this.wrapper.querySelector(\".info\");\r\n            if (info) {\r\n                info.innerHTML = this.infoText;\r\n            }\r\n\r\n        }\r\n        const btns = this.wrapper.querySelectorAll(\"button.page\");\r\n        btns.forEach((btn: any) => {\r\n            EnableBtn(btn, this.activeClass);\r\n            if (btn.classList.contains('number') && parseInt(btn.innerText) == parseInt(this.currentPage)) {\r\n                DisableBtn(btn, this.activeClass);\r\n            }\r\n        });\r\n\r\n        if (this.currentPage == 1) {\r\n            const firstBtn = this.wrapper.querySelector(\"button.page.first\");\r\n            const prevBtn = this.wrapper.querySelector(\"button.page.prev\");\r\n            DisableBtn(firstBtn, this.activeClass);\r\n            DisableBtn(prevBtn, this.activeClass);\r\n        }\r\n\r\n        if (this.currentPage == this.totalPages) {\r\n            const lastBtn = this.wrapper.querySelector(\"button.page.last\");\r\n            const nextBtn = this.wrapper.querySelector(\"button.page.next\");\r\n            DisableBtn(lastBtn, this.activeClass);\r\n            DisableBtn(nextBtn, this.activeClass);\r\n        }\r\n\r\n    }\r\n}","export function  CreateElement(ele, html: any = '', classNames: string = '', attributes = {}) {\r\n    const ele$ = document.createElement(ele);\r\n    for (let key in attributes) {\r\n        ele$.setAttribute(key, attributes[key]);\r\n    }\r\n    const classNamesTrimmed = classNames.trim();\r\n    if (classNamesTrimmed) {\r\n        const classNamesSplitted = classNamesTrimmed.split(' ');\r\n        const classNamesMapped = classNamesSplitted.map(v => v.trim()).filter(v => v);\r\n        classNamesMapped.forEach(className => {\r\n            ele$.classList.add(className);\r\n        })\r\n    }\r\n\r\n    ele$.innerHTML = html;\r\n\r\n    return ele$;\r\n}\r\n","import { CreateElement } from \"./CreateElement\";\r\nimport { ClassNames } from \"../interfaces/Classnames\";\r\n\r\nexport function CreateListElement(content, btnClassname, classNames:ClassNames = {}) {\r\n    let li, btn, span;\r\n    li = CreateElement('li', '', classNames?.li);\r\n    btn = CreateElement('button', '', `page ${btnClassname} ${classNames?.button?classNames.button:''}`);\r\n    span = CreateElement('span', content, classNames?.span);\r\n    btn.append(span);\r\n    li.append(btn);\r\n    return li;\r\n}","export function EnableBtn(btn, activeClass) {\r\n    if (!btn.classList.contains('number')) {\r\n        btn.closest('li').classList.remove('disabled');\r\n    }\r\n    btn.removeAttribute('disabled');\r\n    btn.classList.remove(activeClass);\r\n}","export function   DisableBtn(btn, activeClass) {\r\n    if (!btn.classList.contains('number')) {\r\n        btn.closest('li').classList.add('disabled');\r\n    }\r\n    btn.setAttribute('disabled', true);\r\n    btn.classList.add(activeClass);\r\n}","import { ServerConfig } from \"./interfaces/ServerConfig\";\r\nimport { CreateElement } from \"./helpers/CreateElement\";\r\nimport { CreateListElement } from \"./helpers/CreateListElement\";\r\nimport { EnableBtn } from \"./helpers/EnableBtn\";\r\nimport { DisableBtn } from \"./helpers/DisableBtn\";\r\nexport class VanillaServerGrid extends EventTarget{\r\n\r\n    wrapper: HTMLElement;\r\n\r\n    config: ServerConfig;\r\n\r\n    currentPage: any = 1;\r\n\r\n    pageSelected:any = -1;\r\n\r\n    get itemsPerPage(): any {\r\n\r\n        return this.config?.itemsPerPage || 10;\r\n    }\r\n\r\n    get totalPages(): any {\r\n\r\n        return Math.ceil(this.config?.totalItems / this.config?.itemsPerPage) || 0\r\n    }\r\n\r\n    get start(): any {\r\n\r\n        return (this.currentPage - 1) * (this.itemsPerPage)\r\n    }\r\n\r\n    get end(): any {\r\n\r\n        let end = this.start + this.itemsPerPage;\r\n\r\n        if (end > this.config?.totalItems) {\r\n\r\n            end = this.config.totalItems;\r\n        }\r\n        return end;\r\n    }\r\n\r\n    get activeClass() {\r\n\r\n        return this.config?.classNames?.active || 'active';\r\n    }\r\n\r\n    get infoText() {\r\n        const info = this.config.info?.trim();\r\n        if (!info) {\r\n            return '';\r\n        }\r\n        const replaced = info.replace(':start', this.start + 1)\r\n            .replace(':end', this.end)\r\n            .replace(':total', this.config?.totalItems.toString());\r\n        return replaced;\r\n    }\r\n\r\n    constructor(wrapper, config) {\r\n        super();\r\n        this.config = config;\r\n        this.wrapper = wrapper;\r\n        this.currentPage = config?.currentPage || 1;\r\n        this.render();\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        this.wrapper.innerHTML = '';\r\n        if (this.infoText) {\r\n            const info = CreateElement('div', '', 'info');\r\n            info.innerHTML = this.infoText;\r\n            this.wrapper.append(info);\r\n        }\r\n\r\n        let li;\r\n\r\n        const ul = CreateElement('ul', '', this.config?.classNames?.ul);\r\n\r\n        li = CreateListElement('&laquo;', 'first', this.config.classNames);\r\n        ul.append(li);\r\n        li = CreateListElement('&lsaquo;', 'prev', this.config.classNames);\r\n        ul.append(li);\r\n        if (this.totalPages > 5) {\r\n\r\n            const select = CreateElement('select', '', this.config?.classNames?.select);\r\n            for (let i = 1; i <= this.totalPages; i++) {\r\n                const option = CreateElement('option', i, '', { value: i })\r\n\r\n                select.append(option)\r\n\r\n            }\r\n            const li = CreateElement('li');\r\n            const div = CreateElement('div', '', this.config?.classNames?.selectDiv);\r\n            div.append(select);\r\n            li.append(div);\r\n            ul.append(li);\r\n\r\n        } else {\r\n\r\n            for (let i = 1; i <= this.totalPages; i++) {\r\n\r\n                li = CreateListElement(i, 'number', this.config.classNames);\r\n\r\n                ul.append(li);\r\n\r\n            }\r\n        }\r\n\r\n\r\n\r\n        li = CreateListElement('&rsaquo;', 'next', this.config.classNames);\r\n        ul.append(li);\r\n        li = CreateListElement('&raquo;', 'last', this.config.classNames);\r\n        ul.append(li);\r\n\r\n        const nav = CreateElement('nav', '', this.config?.classNames?.nav);\r\n        nav.append(ul);\r\n\r\n\r\n        this.wrapper.append(nav);\r\n\r\n        const btns = this.wrapper.querySelectorAll(\"button.page\");\r\n        btns.forEach((btn: any) => {\r\n            if (btn.classList.contains('number') && parseInt(btn.innerText) == parseInt(this.currentPage)) {\r\n                DisableBtn(btn, this.activeClass);\r\n            }\r\n        });\r\n\r\n        if (this.currentPage == 1) {\r\n            const firstBtn = this.wrapper.querySelector(\"button.page.first\");\r\n            const prevBtn = this.wrapper.querySelector(\"button.page.prev\");\r\n            DisableBtn(firstBtn, this.activeClass);\r\n            DisableBtn(prevBtn, this.activeClass);\r\n        }\r\n\r\n        if (this.currentPage == this.totalPages) {\r\n            const lastBtn = this.wrapper.querySelector(\"button.page.last\");\r\n            const nextBtn = this.wrapper.querySelector(\"button.page.next\");\r\n            DisableBtn(lastBtn, this.activeClass);\r\n            DisableBtn(nextBtn, this.activeClass);\r\n        }\r\n\r\n        const wrapperBtns = this.wrapper.querySelectorAll('button');\r\n        const wrapperSelect = this.wrapper.querySelector(\"select\");\r\n\r\n        wrapperBtns.forEach((btn) => {\r\n            btn.addEventListener('click', (event) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                this.pageSelected = -1;\r\n                if (btn.classList.contains('page')) {\r\n                    if (btn.classList.contains('number')) {\r\n                        this.pageSelected = parseInt(btn.innerText);\r\n\r\n                    } else if (btn.classList.contains('first')) {\r\n                       this.pageSelected = 1;\r\n\r\n                    } else if (btn.classList.contains('prev')) {\r\n                       this.pageSelected = this.currentPage - 1;\r\n\r\n                    } else if (btn.classList.contains('next')) {\r\n                        this.pageSelected = this.currentPage +1;\r\n\r\n                    } else if (btn.classList.contains('last')) {\r\n                        this.pageSelected = this.totalPages;\r\n                        \r\n                    }\r\n                }\r\n                this.onPageChange();\r\n               \r\n            })\r\n        })\r\n\r\n        if (wrapperSelect) {\r\n            wrapperSelect.value = this.currentPage;\r\n            wrapperSelect.addEventListener('change', () => {\r\n                this.pageSelected = parseInt(wrapperSelect.value);\r\n                this.onPageChange();\r\n            })\r\n        }\r\n\r\n\r\n    }\r\n    onPageChange(){\r\n        const detail = {currentPage:this.currentPage, pageSelected:this.pageSelected};\r\n        const cev = new CustomEvent('onPageChange',{detail});\r\n        this.dispatchEvent(cev);\r\n    }\r\n\r\n   \r\n\r\n}"],"names":[],"version":3,"file":"vanillagrid.umd.js.map"}